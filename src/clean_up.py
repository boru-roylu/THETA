import os
import glob
import argparse
import json
import shutil

""" Cleans up checkpoints generated by Deepspeed.
"""


parser = argparse.ArgumentParser(prog='Xtrayce')
parser.add_argument(
    '-e', '--exp_dir',
    type=str,
    required=True,
    help='Experiment main dir you want to clean up.')
parser.add_argument(
    '-d', '--delete',
    help='If not turn on, only show files to be deleted.',
    action='store_true')
args = parser.parse_args()

if not args.delete:
    print('Files will be deleted.')
    print(f'{"Basename":<30} | {"Path"}')
    print(f'-'*120)

for path in glob.glob(f'{args.exp_dir}/*/checkpoint*/*'):
    bn = os.path.basename(path)

    if bn in {
        'fp32', 'trainer_state.json', 'training_args.bin'}:
        continue

    if not args.delete:
        print(f'{bn:<30} | {path}')
        continue

    print(f'Deleting {path}')
    if os.path.isdir(path):
        shutil.rmtree(path)
    else:
        os.unlink(path)
print(f'-'*120)


for path in glob.glob(f'{args.exp_dir}/*/trainer_state.json'):
    with open(path, 'r') as f:
        d = json.load(f)

    #d['best_model_checkpoint'] = d['best_model_checkpoint'].replace('silver_ks', 'silver_ks_bert-base-uncased')
    #with open(path, 'w') as f:
    #    json.dump(d, f, indent=2)

    best_ckpt = os.path.realpath(d['best_model_checkpoint'])
    dir_name = os.path.dirname(path)
    dir_name = os.path.realpath(dir_name)
    print(f'{"Dir name":<20} {dir_name}')
    print(f'{"Best ckpt":<20} {best_ckpt}')
    for ckpt_dir in glob.glob(f'{dir_name}/checkpoint*'):
        ckpt_dir = os.path.realpath(ckpt_dir)

        if ckpt_dir == best_ckpt:
            continue

        if not args.delete:
            print(f'{"To Delete":<20} {ckpt_dir}')
            continue

        print(f'{"Deleting":<20} {ckpt_dir}')
        assert best_ckpt != ckpt_dir
        shutil.rmtree(ckpt_dir)
    print()
